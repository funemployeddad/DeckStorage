-for delete, need to link to the right deck or card instead of just the last one in the list. maybe make a delete partial that only shows the button, and will get the deck/card info passed to it? how would that work?
<!-- <% session[:card_id]= card.id %> this is only going to delete the last one every time -->

<!-- % session[:deck_id] = deck.id %> this is only going to delete the last one every time -->

##

- need to add the error messages to 'decks/show', 'users/new', 'login', 'cards/new' view files
##

- routes and hidden field forms for decks/:id/edit and decks/cards/id:/edit
##

- need to make a button to destroy a card and have it in the iteration that displays the deck (I think it's in 'decks/show') same on the user_path page for deleting whole decks
#need to somehow get the card_id when you click the delete button


<%= f.button :submit, class: "btn-primary"%>
<%= link_to "Delete", f.object, class: 'btn btn-default', data: {method: 'DELETE'}%>
##

- Set up BOOTSTRAP and start working on layout/styling
##

*** use a scraper to set the :cards table? if so, can it make the seed file for me? ***


#################################### DONE BELOW THIS LINE
- form for making a new deck
  - when you click it, it doesn't give you a place to enter the name, maybe make a form to render on the user_path page rather than link_to the url for it and when you add the name and click "create deck" it instantiates a deck with the name given, then goes to the add card link. other option is to put a 'mass build' form for cards into the new_deck_path page
  - need deck_controller #new and #create and views decks/new, decks/show, decks/_form
##
- form for making a new card
  form_for :card
  f.label :name
  f.text_field :name
  f.label :quantity
  f.text_field :quantity
  end
  <%= render '/cards/new' %>
##

- create user (not from API)

MODELS
  User
    :name, :email, :password_digest, :uid
    has_many :decks
    has_many :cards, through: :decks

  Deck
    :name, :user_id
    belongs_to :user
    has_many :cards

  Card
    :name, :quantity, :deck_id
    belongs_to :deck


CONTROLLERS
  UsersController
    #new
    #create
    #show -- route 'users/:id/'--
      will need to render decks#index
      user_decks(@user)
      @user.decks.each do |deck|
        link_to "#{deck.name}", deck_path(deck)
      end

  DecksController
    #show -- route 'users/:id/decks/:id'
      will need to render deck_list
      @user.deck.cards.each do |card|
        li
          card.name
          card.quantity
        li
      end

    #new
    #create
    #destroy

  CardsController - not going to have a link to the individual page, it is just used to make the db records for the deck lists
    #new
    #create
